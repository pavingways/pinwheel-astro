---
import Logo from "@components/Logo.astro";
import menu from "@config/menu.json";
import { NavigationLink } from "@lib/utils/interfaces";
import Config from "astro.config.mjs";
import i18nAll from "@lib/i18n.json";
import LanguagePicker from "../components/LanguagePicker.astro";

const { main }: { main: NavigationLink[] } = menu;
const { pathname } = Astro.url;

let { i18n_de, i18n_en, i18n_fr, i18n_it } = i18nAll;
let i18n = {};
switch (Astro.currentLocale) {
  case "de":
    i18n = i18n_de;
    break;
  case "en":
    i18n = i18n_en;
    break;
  case "fr":
    i18n = i18n_fr;
    break;
  case "it":
    i18n = i18n_it;
    break;
}
---


<header class="header">
  <nav class="navbar container">
    <!-- logo -->
    <div class="order-0">
      <Logo />
    </div>

    <input id="nav-toggle" type="checkbox" class="hidden" />
    <label
      id="show-button"
      for="nav-toggle"
      class="order-2 flex cursor-pointer items-center lg:order-1 lg:hidden"
    >
      <svg class="h-6 fill-current" viewBox="0 0 20 20">
        <title>Mobile Apps Menu Open</title>
        <path d="M0 3h20v2H0V3z m0 6h20v2H0V9z m0 6h20v2H0V0z"></path>
      </svg>
    </label>
    <label
      id="hide-button"
      for="nav-toggle"
      class="order-2 hidden cursor-pointer items-center lg:order-1"
    >
      <svg class="h-6 fill-current" viewBox="0 0 20 20">
        <title>Menu Close</title>
        <polygon
          points="11 9 22 9 22 11 11 11 11 22 9 22 9 11 -2 11 -2 9 9 9 9 -2 11 -2"
          transform="rotate(45 10 10)"></polygon>
      </svg>
    </label>

    <ul
      id="nav-menu"
      class="navbar-nav order-3 hidden w-full lg:order-1 lg:flex lg:w-auto lg:space-x-2"
    >
      {
        main.map((item) => (
          <li class="nav-item">
            <a
              href={(
                Astro.currentLocale !== Config.i18n.defaultLocale ? `/${Astro.currentLocale}` : ``
              ) + `${item['url'] ? item['url'] : item['url_' + Astro.currentLocale]}`}
              class={`nav-link inline-block lg:block ${
                (pathname === (item['url'] ? item['url'] : item['url_' + Astro.currentLocale]) || pathname === `/${Astro.currentLocale}${item['url']}`) && "active"
              }`}
            >{i18n[item.i18nKey]}</a>
          </li>
        ))
      }

      <LanguagePicker></LanguagePicker>

    </ul>
  </nav>
</header>
<script is:inline>
  // sticky header
  const header = document.querySelector(".header");
  window.addEventListener("scroll", () => {
    const scrollY = window.scrollY;
    if (scrollY > 5) {
      header.classList.add("header-sticky");
    } else {
      header.classList.remove("header-sticky");
    }
  });
</script>
